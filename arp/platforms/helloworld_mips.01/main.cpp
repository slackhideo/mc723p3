/******************************************************
 * This is the main file for the mips1 ArchC model    *
 * This file is automatically generated by ArchC      *
 * WITHOUT WARRANTY OF ANY KIND, either express       *
 * or implied.                                        *
 * For more information on ArchC, please visit:       *
 * http://www.archc.org                               *
 *                                                    *
 * The ArchC Team                                     *
 * Computer Systems Laboratory (LSC)                  *
 * IC-UNICAMP                                         *
 * http://www.lsc.ic.unicamp.br                       *
 ******************************************************/

// Grupo 40
 
const char *project_name="mips1";
const char *project_file="mips1.ac";
const char *archc_version="2.0beta1";
const char *archc_options="-abi -dy ";

#include  <systemc.h>
#include  <string.h>
#include  "mips1.H"
#include  "ac_tlm_mem.h"
#include  "mc723_router.h"
#include  "mc723_locker.h"

using user::ac_tlm_mem;
using user::mc723_router;
using user::mc723_locker;

int sc_main(int ac, char *av[])
{

  //!  ISA simulator
  mips1 mips1_proc1("mips1");
  mips1 mips1_proc2("mips2");
  mips1 mips1_proc3("mips3");
  ac_tlm_mem mem("mem");
  mc723_router router("router");
  mc723_locker locker("locker");

#ifdef AC_DEBUG
  ac_trace("mips1_proc1.trace");
  ac_trace("mips1_proc2.trace");
  ac_trace("mips1_proc3.trace");
#endif 

  mips1_proc1.DM_port(router.target_export);
  mips1_proc2.DM_port(router.target_export);
  mips1_proc3.DM_port(router.target_export);

  router.mem_port (mem.target_export);
  router.lock_port (locker.target_export);

  char **av_bkp = (char**) malloc(ac*sizeof(char*));
  for(int i = 0; i < ac; i++) av_bkp[i] = (char*) malloc(sizeof(av[i]));

  for(int i = 0; i < ac; i++) strcpy(av_bkp[i],av[i]);
  mips1_proc1.init(ac, av_bkp);
  for(int i = 0; i < ac; i++) strcpy(av_bkp[i],av[i]);
  mips1_proc2.init(ac, av_bkp);
  for(int i = 0; i < ac; i++) strcpy(av_bkp[i],av[i]);
  mips1_proc3.init(ac, av_bkp);

  cerr << endl;

  sc_start();

  mips1_proc1.PrintStat();
  cerr << endl;
  mips1_proc2.PrintStat();
  cerr << endl;
  mips1_proc3.PrintStat();
  cerr << endl;

#ifdef AC_STATS
  mips1_proc1.ac_sim_stats.time = sc_simulation_time();
  mips1_proc1.ac_sim_stats.print();
  mips1_proc2.ac_sim_stats.time = sc_simulation_time();
  mips1_proc2.ac_sim_stats.print();
  mips1_proc3.ac_sim_stats.time = sc_simulation_time();
  mips1_proc3.ac_sim_stats.print();
#endif 

#ifdef AC_DEBUG
  ac_close_trace();
#endif 

  // TO DO: make error!
  // return mips1_proc1.ac_exit_status;
  return 0;
}
